#本仓库及文件只在Github发布
#作者：QC3284@github.com(https://github.com/QC3284)
#本仓库地址：https://github.com/QC3284/SWRT-actions
#最后更新时间：2024.11.09

name: 编译SWRT (Compile SWRT)

on:
  schedule:
    - cron: 0 3 * * 3,6
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: "Dont care, and don't touch it!"
        required: true
        default: 'false'

env:
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: true
  UPLOAD_WETRANSFER: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo Start
        sleep 3
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo Done
        
    - name: 安装必要软件包 (Installation of necessary packages)
      run: |
        echo Start
        echo $(uname -a) 
        sleep 5
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt update
        sudo apt upgrade -y
        sudo apt update
        sudo apt-get -y install build-essential asciidoc binutils bison bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget lib32z1 lib32stdc++6 gtk-doc-tools intltool binutils-dev cmake lzma liblzma-dev lzma-dev uuid-dev liblzo2-dev xsltproc dos2unix libstdc++5 docbook-xsl-* sharutils autogen shtool gengetopt libltdl-dev libtool-bin
        sudo apt-get install -y libfuse-dev neofetch 7zip
        sudo apt update
        sudo apt full-upgrade -y
        echo Done
        sleep 10
        
    - name: 拉取源码 (Pulling the source code)
      working-directory: /workdir
      run: |
        df -hT $PWD 
        git clone https://github.com/SWRT-dev/swrt-gpl.git
        ln -sf /workdir/swrt-gpl $GITHUB_WORKSPACE/swrt-gpl
        cd swrt-gpl
        git pull
        
    - name: 下载包 (Download package)
      run: |
         sudo neofetch
         git clone https://github.com/SWRT-dev/mtk-toolchains
         cd mtk-toolchains
         sudo ln -sf $(pwd)/toolchain-mipsel_24kc_gcc-5.4.0_musl-1.1.24 /opt/
         
    - name: 编译固件 (Compile Firmware)
      run: |
         cd swrt-gpl
         sudo neofetch
         make -version
         gcc --version | head -n1
         sleep 10
         echo "开始编译"
         cd swrt-gpl/release/src-mtk-mips
         make swrt-xm-cr660x -j4
         echo "完成 (Finished.)"
         
    - name: 检查空间使用情况 (Check space usage)
      if: (!cancelled())
      run: df -hT

    - name:  上传目录 (Upload bin directory)
      uses: actions/upload-artifact@main
      with:
        name: swrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: swrt-gpl/release/src-mtk-mips

    - name: 上传固件目录 (Uploading Firmware Directory)
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: swrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: 生成发布标签 (Generate publish tags)
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        touch release.txt
        curl https://raw.githubusercontent.com/QC3284/openwrt-actions-config/main/x-wrt-actions-txt-001.sh | bash
        echo "status=success" >> $GITHUB_OUTPUT
  
    - name: 上传固件以发布 (Upload firmware for release)
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
     
    - name: 删除工作流运行 (Delete workflow run)
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: 删除旧版本 (Delete old version)
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 6
        delete_tags: flase
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
